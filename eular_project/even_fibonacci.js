/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

// this is finding the n'th fibonacci digit using regursion
// function fib(n) {
//   if (n <= 1) return 1;
//   else return fib(n - 1) + fib(n - 2);
// }

// var val = 0;
// var count = 0;
// var result = 0;
// do {
//   val = fib(count++);
//   if (val % 2 == 0) {
//     result += val;
//   }
// } while (val < 4000000);

// console.log(result);

// function findSumOfEvenFibDigits(terminator, sum) {
//   if (terminator <= 1) {
//     return sum;
//   }
//   if (terminator % 2 == 0) {
//     sum += terminator;
//   }
//   return findSumOfEvenFibDigits(terminator - 1, sum);
// }
// var sum = findSumOfEvenFibDigits(4000000, 0);
// console.log(sum);
